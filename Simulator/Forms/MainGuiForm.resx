<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TrafficSimulatorMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABER0UASDY/AGksLABGREUAR0ZEAERE
        QgBINjoATiUzAEs0OgBGRUQASEdHAEY7QQA2NjUAKyoqAEFAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAENGRQFFNT0AjyEhQD1I
        QnI2Wkd1LXdRfSWNVoQjkViFKoNTgDNmTHg9S0R1PkFAXzQ1NAs2NDUAPT08AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAgIAVWFcADQj
        KwQ3OjnjJjQt/xxQNf8UckT/D4VO/w+JUP8Re0n/GWA7/x46LP8xNTP/NjY2Xjc1NwAxMjEDAQEBAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhYWAAoC
        AwAAAAABGg0UEjI4NOgXQSv7CXJA+getTvwM3UT8DeRB/AnES/wHiEr8C08t9yc2Lv0vMC9+TUlKADxC
        PgMBAgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAw
        MAAVFRUAAQEABQEAAAABAQCDKjQu/xxYO/kQnk//EPk3/xD/MP8Q/zL/Dv8s/xLFS/4RakH8K0U2/hYX
        FuwUEhMTDhAOAAAAAAIVFRUAKioqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAwMDAAMjIyABEREQAJCwoACgwLNgwMDO8tOTL9IVhC/BK7QP4N/yv/I/xI/yn8TP8T/TL/DNsw/xl0
        R/4sRzj6Ghwb/wUFBZoBAAEACgsKAAkJCQEqKioAQ0NCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAVlZWACsrKwAlJSUBISEhASYmJnokJCP2ICAf/zI6NP0pSj//CZ8t/yj6Q/9q/4L/cv+J/0T+
        Xf8Ixij/HF08/zFAOP4mJyb8ICAg/yYmJsMkJCQtISEhACcnJwA/Pz4AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABVVVUANzc3ATY2NgA6OjqPNjY2/zQ0NPwyMjL9NTk2/zI+Ov4bYzT+Dc0o/0vw
        YP9g83T/IOA4/wyGKP8pPzj+Mzo1/zAwMP8zMzP6NTU1/zg4OO45OTkfNjY2AD4+PQEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVVVQFSUlIAVFRULFBQUP9OTk7/TExM/0hISP85OTn/Oj47/z1E
        RP80c0X/GKUt/xOpKP8jhTf/NUlB/zk/PP80NjX/PDw8/0tLS/9MTEz/UFBQ/1JSUahRUVIAT09PAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVVVVAVVVVQBVVVUxVlZWk1dXV7VWVlbVVVVV7js6
        O/5AQED+RUdF/lFQUv9zdHj/dnp7/1ZUWv9ERkX/Q0RE/jY2Nv5ERET4WVlZ4lhYWMVWVlajVVVVcFVV
        VQBcXF0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVVVUAVlZWAFpaWgBMTE0AhISEAP//
        /wMoKCgkODg46D9AP/5ERET9QERC/0RHRv9GSEf/QUVE/0NEQ/9DQ0P6OTk5/jAwMIMzMzMNNTU1AFZW
        VgBWVlYAVlZWAFpaWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVVVQBUVFQAAAAAAVVV
        VQQAAAADAAAAAB0dHQM3NzfgIiIi/x0dHvwdGRf/HRkV/x0bGP8dFxT/HBwc/xsbG/kuLi7+MjIyaDMz
        MwAqKioGMTExBFRUVANUVFQAVlZWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAKysrAAcHBwEDAwMDERERHzExMe8gISH9HRkW/RwxPP8PUnv/DleD/xdCWv8fHRz/FxcX+ioq
        Kv8qKiqMYWFhAExMTAQCAgIAHBwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMjIyABgYGAAYGBgAAAAABAAAAAAAAACWLCwt/yglI/opNj//Bmqn/wBvtf8AcLP/AHC3/yBP
        bP8lHxv9LzAy/RUVFfQrKyscHh4eAAEBAQMaGhoALi4uAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAzMzMAQEBAABUVFQAQEBAAEBAQTw4ODvYvMTL8MCkk/RhKaf4Ad7//CYXG/wqJ
        yv8BfMP/Bl+X/ysrK/8xMTL7HBwc/wMDA68AAAANDAwMABcXFwEtLS0AXl5eAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAVVVVADAwMAAqKioBHh4eCiYmJpglJSX/IiIi/jM0Nf41Lyv/EzlS/wiC
        xv87r+f/P7Dp/xSU1/8AT4D/LSoo/jM0NP8nJyj8IyMj/yoqKtkpKSlFJCQkACkpKQFKSkoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVVVUAOTk5ATk5OQA9PT2iOjo6/zY2Nvg1NTX9NjY2/zc3
        Nv42Nzj+B0Fo/xt0qv8kgLX/AlKF/yAyQP84NTP+MzQ0/jIyMv42Njb5Nzc3/zs7O/g/Pz8sPDw8AD8/
        PwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFZWVgFWVlYAVlZWNFJSUv9QUFD/Tk5O/0pK
        Sv86Ojr/Ojs7/0dGRf9OS0r/LjlG/yQ1Rf89P0P/SUZE/zs8PP80NTT/Pj4+/09PT/9QUE//UVFR/1JS
        UrNSUlIAUVFRAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVVVVAVRUVABVVVUoVlZWeVZW
        VpxVVVXAVVVV3zs7O/1BQUH+RkZH/lFRUf91cm//eXZy/1pZWP9FRkf/RUVF/jY2Nv5DQ0PxU1NTz1BQ
        UK5WVlaJVlZWWVdXVwBfX18AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVVVUAVVVVAFVV
        VQBVVVUAPT09AAAAAAAgICASODg45T4+Pv5CQkL8P0BB/z0+Qf89PkH/Pj9B/0JCQv9BQUH6OTk5/i4u
        LncvLy8ALi4uAFZWVgBVVVUAVVVVAGBgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVV
        VQBVVVUAVVVVAf///wQNDQ0EAAAAAh4eHgo3NzfhIiIi/xwcHvwcGxf/Hh0W/yAfGv8cGxT/HBwc/xsb
        G/ouLi7+MzMzbTU1NQEuLi4HODg4BFVVVQNUVFQAVVVVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFBQUAA8PDwAHBwcCHBwcDjMzM+gfHyD+GxoV/RwhOf8RInf/ECKA/xkj
        Vf8eHRr/FxcX+SoqKv8wMDB2UFBQAD8/PwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACQkJAATExMAAQEBBgAAAAABAQFwLCwt/ycnI/ooLDv+CSOd/wEi
        vv8DJb//AB6s/yItY/8lIx38Li8w/hgYGNxRUVELPDw8AwAAAAEAAAAALCwsAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnJycAIyMjABISEgEICAgACAgIHQgICOUuLjD9MC8l/Bon
        YP8GJbT/I0LT/yVE2f8OLbv/CSCH/ywsK/4yMjL6GRkZ/wAAAH8AAAAABwcHAAAAAAEqKioAPz8/AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVVVVACIiIgAjIyMBFxcXACEhIVkhISHlHBwc/zIy
        NP01NC3/ExxJ/ho1tf9WcOL/WnPk/yxIyP8EFm3/LCsp/zQ0Nf4kJCT8Hx8f/yUlJaIiIiIWISEhACcn
        JwA7OzsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVVVUANTU1AjQ0NAAyMjJ0NTU1/zEx
        Mf8wMDD9NTU1/zg4N/41NDb+CBNV/x0wkv8mO53/BBVs/yAjN/84NzT+MzQ0/y8vL/4wMDD8MjIy/zU1
        Ndo0NDQTNDQ0ADo6OgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRUVABQUFEAUVFRH09P
        T/9LSkv/SEhI/0RERP45OTn+Ozs7/0dHRf9OTUr/Li8//yUoPf89PUD/SEhD/zw8Pf81NTX/Ojo6/UdH
        R/9JSUn+TExM/1JSUpNOTk4ATExMAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVVVVAVZW
        VgBWVlY8VlZWvFZWVtdUVFTyVVVV/zw8PP9CQkL+RkZH/lRUVf98fHj/gYB8/15eXf9GR0f/RkZG/zc3
        N/5FRUX/WVlZ+1dXV+RWVlbIQUFBjVdXVwBbW1sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABVVVUAV1dXAFpaWgBWVlYANjY2BCoqKhozMzNDMzMz7Tg4OPw9PT39OTk5/jo6O/48PD3+OTk5/jw8
        PP47Ozv5MzMz+zExMYQxMTEnLCwtD1BQUAAAAAAAVlZXAFlZWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFVVVQBUVFQAVlZWAFVVVQJDQ0AARERBAD4+OxQ+Pjz/Pj48/zw8Ov88PDr/Ozs5/zo6
        OP88PDr/PDw6/z09O/8+Pjz/PDw6aj4+PAA+PjwAAAAAAAAAAAJVVVUAVlZWAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1dWQFcXFgBUVFPEllZVnBSUlCxVlZU9F9f
        Xv1nZ2b+aGhn/mFhYP5YWFf5UlJRxVRUUnpYWFY2X19cAmNjYAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYWFeAGBgXAAAAAAASEhKADo6
        PABOTk52XV1e6HJycvZ2dnb2YmJi7lRUVJhKSksCSEhJADw8PQBiYl4AYmJeAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////wB///4AP//+AD///AA///wAH//wAA//4AAH/+AAA//gAAP//g
        A///4AP//+AD///AA///wAH//wAA//4AAH/+AAA//gAAP//gA///4AP//+AD///AA///wAH//wAA//4A
        AH/+AAA//gAAP//gA///4AP//+AH///4H/8=
</value>
  </data>
</root>